@page "/roles"

@using Microsoft.AspNetCore.Identity
@using System.Linq;
@using EMS.Amaanat.Web.Data
@inject ApplicationDbContext dbContext
@inject RoleManager<IdentityRole> roleManager
@inject UserManager<IdentityUser> userManager



<h3>UserRoles</h3>

@if (!string.IsNullOrEmpty(messageSuccess))
{
    <p style="color: green">@messageSuccess</p>
}
@if (!string.IsNullOrEmpty(messageError))
{
    <p style="color: red">@messageError</p>
}

<p>This page will be used to manage roles for the app users</p>


@if (roles.Count() > 0)
{
    @foreach (var role in roles)
    {
        <li>@role</li>
    }
}
else
{
    <p>No roles available in the applocation</p>
}
<input type="text" placeholder="please enter role name to add a role" @bind="roleName"/>
<button @onclick="AddRole">Add role</button>

@code {
    string messageSuccess = string.Empty;
    string messageError = string.Empty;
    IEnumerable<IdentityRole> roles = Enumerable.Empty<IdentityRole>();
    string roleName = string.Empty;
    protected override void OnInitialized()
    {
        //roleManager = null;
        roles = roleManager.Roles.ToList();
    }

    async Task AddRole()
    {
        if (string.IsNullOrEmpty(roleName))
            return;

        IdentityRole identityRole = await roleManager.FindByNameAsync(roleName);
        if (identityRole == null)
        {
            roleName = roleName.Trim().ToUpper();
            identityRole = new IdentityRole(roleName);
            var identityResult = await roleManager.CreateAsync(identityRole);
            if (identityResult.Succeeded)
            {                
                messageSuccess = $"Role({roleName}) created";
            }
        }
    }
}
