@*@page "/users"
@using Microsoft.AspNetCore.Identity
@using System.Linq;
@using Microsoft.EntityFrameworkCore;
@inject UserManager<IdentityUser> userManager

<h3>Users</h3>

<table class="table">
    <thead>
        <tr>
            <th>Username</th>
            <th>Email</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in userManager.Users.ToList())
        {
            <tr>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => EditUser(user.Id)">Edit</button>
                    <button class="btn btn-danger" @onclick="() => DeleteUser(user.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private async Task EditUser(string userId)
    {
        var user = await userManager.FindByIdAsync(userId);
        if (user != null)
        {
            var token = await userManager.GeneratePasswordResetTokenAsync(user);
            var resetUrl = NavigationManager.ToAbsoluteUri($"/resetpassword?userId={user.Id}&token={WebUtility.UrlEncode(token)}");
            await jsRuntime.InvokeVoidAsync("open", resetUrl.ToString(), "_blank");
        }
    }

    private async Task DeleteUser(string userId)
    {
        var user = await userManager.FindByIdAsync(userId);
        if (user != null)
        {
            await userManager.DeleteAsync(user);
        }
    }
}

*@